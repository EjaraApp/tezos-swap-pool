parameter (or (or (map %add_oracles address string) (or (address %change_admin) (unit %clean_pool))) (or (or (list %remove_oracles address) (unit %request_tezos_exchange)) (or (unit %request_tezos_swap) (unit %update_pool))));
storage   (pair (pair (pair (list %accepted_cryptos string) (address %admin)) (pair (big_map %closed_pool (missing_type_conversion "Unknown Type") (missing_type_conversion "Unknown Type")) (int %min_lock))) (pair (pair (map %open_pool string (pair (pair (mutez %amount) (map %cryptos string string)) (pair (list %dips (pair (mutez %amount) (string %swap))) (pair (timestamp %timelock) (timestamp %timestamp))))) (map %oracles address string)) (pair (address %spare) (big_map %swap_pool string (pair (pair (address %address) (pair (mutez %amount) (string %crypto))) (pair (pair (bool %swapped) (list %swaps string)) (pair (timestamp %timelock) (timestamp %timestamp))))))));
code
  {
    DUP;        # pair @parameter @storage : pair @parameter @storage
    CDR;        # @storage : pair @parameter @storage
    SWAP;       # pair @parameter @storage : @storage
    CAR;        # @parameter : @storage
    IF_LEFT
      {
        IF_LEFT
          {
            # == add_oracles ==
            # sp.verify(sp.pack(sp.set_type_expr(self.data.admin, sp.TAddress)) == sp.pack(sp.set_type_expr(sp.sender, sp.TAddress)), message = 'Invalid Admin!') # @parameter%add_oracles : @storage
            SENDER;     # address : @parameter%add_oracles : @storage
            PACK;       # bytes : @parameter%add_oracles : @storage
            DIG 2;      # @storage : bytes : @parameter%add_oracles
            DUP;        # @storage : @storage : bytes : @parameter%add_oracles
            DUG 3;      # @storage : bytes : @parameter%add_oracles : @storage
            CAADR;      # address : bytes : @parameter%add_oracles : @storage
            PACK;       # bytes : bytes : @parameter%add_oracles : @storage
            COMPARE;    # int : @parameter%add_oracles : @storage
            EQ;         # bool : @parameter%add_oracles : @storage
            IF
              {}
              {
                PUSH string "Invalid Admin!"; # string : @parameter%add_oracles : @storage
                FAILWITH;   # FAILED
              }; # @parameter%add_oracles : @storage
            # for oracle in params.oracles.keys(): ... # @parameter%add_oracles : @storage
            DUP;        # @parameter%add_oracles : @parameter%add_oracles : @storage
            ITER
              {
                CAR;        # address : @parameter%add_oracles : @storage
                # self.data.oracles[oracle] = params.oracles[oracle] # address : @parameter%add_oracles : @storage
                DIG 2;      # @storage : address : @parameter%add_oracles
                DUP;        # @storage : @storage : address : @parameter%add_oracles
                CAR;        # pair (pair (list %accepted_cryptos string) (address %admin)) (pair (big_map %closed_pool (missing_type_conversion "Unknown Type") (missing_type_conversion "Unknown Type")) (int %min_lock)) : @storage : address : @parameter%add_oracles
                SWAP;       # @storage : pair (pair (list %accepted_cryptos string) (address %admin)) (pair (big_map %closed_pool (missing_type_conversion "Unknown Type") (missing_type_conversion "Unknown Type")) (int %min_lock)) : address : @parameter%add_oracles
                CDR;        # pair (pair (map %open_pool string (pair (pair (mutez %amount) (map %cryptos string string)) (pair (list %dips (pair (mutez %amount) (string %swap))) (pair (timestamp %timelock) (timestamp %timestamp))))) (map %oracles address string)) (pair (address %spare) (big_map %swap_pool string (pair (pair (address %address) (pair (mutez %amount) (string %crypto))) (pair (pair (bool %swapped) (list %swaps string)) (pair (timestamp %timelock) (timestamp %timestamp)))))) : pair (pair (list %accepted_cryptos string) (address %admin)) (pair (big_map %closed_pool (missing_type_conversion "Unknown Type") (missing_type_conversion "Unknown Type")) (int %min_lock)) : address : @parameter%add_oracles
                DUP;        # pair (pair (map %open_pool string (pair (pair (mutez %amount) (map %cryptos string string)) (pair (list %dips (pair (mutez %amount) (string %swap))) (pair (timestamp %timelock) (timestamp %timestamp))))) (map %oracles address string)) (pair (address %spare) (big_map %swap_pool string (pair (pair (address %address) (pair (mutez %amount) (string %crypto))) (pair (pair (bool %swapped) (list %swaps string)) (pair (timestamp %timelock) (timestamp %timestamp)))))) : pair (pair (map %open_pool string (pair (pair (mutez %amount) (map %cryptos string string)) (pair (list %dips (pair (mutez %amount) (string %swap))) (pair (timestamp %timelock) (timestamp %timestamp))))) (map %oracles address string)) (pair (address %spare) (big_map %swap_pool string (pair (pair (address %address) (pair (mutez %amount) (string %crypto))) (pair (pair (bool %swapped) (list %swaps string)) (pair (timestamp %timelock) (timestamp %timestamp)))))) : pair (pair (list %accepted_cryptos string) (address %admin)) (pair (big_map %closed_pool (missing_type_conversion "Unknown Type") (missing_type_conversion "Unknown Type")) (int %min_lock)) : address : @parameter%add_oracles
                CDR;        # pair (address %spare) (big_map %swap_pool string (pair (pair (address %address) (pair (mutez %amount) (string %crypto))) (pair (pair (bool %swapped) (list %swaps string)) (pair (timestamp %timelock) (timestamp %timestamp))))) : pair (pair (map %open_pool string (pair (pair (mutez %amount) (map %cryptos string string)) (pair (list %dips (pair (mutez %amount) (string %swap))) (pair (timestamp %timelock) (timestamp %timestamp))))) (map %oracles address string)) (pair (address %spare) (big_map %swap_pool string (pair (pair (address %address) (pair (mutez %amount) (string %crypto))) (pair (pair (bool %swapped) (list %swaps string)) (pair (timestamp %timelock) (timestamp %timestamp)))))) : pair (pair (list %accepted_cryptos string) (address %admin)) (pair (big_map %closed_pool (missing_type_conversion "Unknown Type") (missing_type_conversion "Unknown Type")) (int %min_lock)) : address : @parameter%add_oracles
                SWAP;       # pair (pair (map %open_pool string (pair (pair (mutez %amount) (map %cryptos string string)) (pair (list %dips (pair (mutez %amount) (string %swap))) (pair (timestamp %timelock) (timestamp %timestamp))))) (map %oracles address string)) (pair (address %spare) (big_map %swap_pool string (pair (pair (address %address) (pair (mutez %amount) (string %crypto))) (pair (pair (bool %swapped) (list %swaps string)) (pair (timestamp %timelock) (timestamp %timestamp)))))) : pair (address %spare) (big_map %swap_pool string (pair (pair (address %address) (pair (mutez %amount) (string %crypto))) (pair (pair (bool %swapped) (list %swaps string)) (pair (timestamp %timelock) (timestamp %timestamp))))) : pair (pair (list %accepted_cryptos string) (address %admin)) (pair (big_map %closed_pool (missing_type_conversion "Unknown Type") (missing_type_conversion "Unknown Type")) (int %min_lock)) : address : @parameter%add_oracles
                CAR;        # pair (map %open_pool string (pair (pair (mutez %amount) (map %cryptos string string)) (pair (list %dips (pair (mutez %amount) (string %swap))) (pair (timestamp %timelock) (timestamp %timestamp))))) (map %oracles address string) : pair (address %spare) (big_map %swap_pool string (pair (pair (address %address) (pair (mutez %amount) (string %crypto))) (pair (pair (bool %swapped) (list %swaps string)) (pair (timestamp %timelock) (timestamp %timestamp))))) : pair (pair (list %accepted_cryptos string) (address %admin)) (pair (big_map %closed_pool (missing_type_conversion "Unknown Type") (missing_type_conversion "Unknown Type")) (int %min_lock)) : address : @parameter%add_oracles
                DUP;        # pair (map %open_pool string (pair (pair (mutez %amount) (map %cryptos string string)) (pair (list %dips (pair (mutez %amount) (string %swap))) (pair (timestamp %timelock) (timestamp %timestamp))))) (map %oracles address string) : pair (map %open_pool string (pair (pair (mutez %amount) (map %cryptos string string)) (pair (list %dips (pair (mutez %amount) (string %swap))) (pair (timestamp %timelock) (timestamp %timestamp))))) (map %oracles address string) : pair (address %spare) (big_map %swap_pool string (pair (pair (address %address) (pair (mutez %amount) (string %crypto))) (pair (pair (bool %swapped) (list %swaps string)) (pair (timestamp %timelock) (timestamp %timestamp))))) : pair (pair (list %accepted_cryptos string) (address %admin)) (pair (big_map %closed_pool (missing_type_conversion "Unknown Type") (missing_type_conversion "Unknown Type")) (int %min_lock)) : address : @parameter%add_oracles
                CAR;        # map string (pair (pair (mutez %amount) (map %cryptos string string)) (pair (list %dips (pair (mutez %amount) (string %swap))) (pair (timestamp %timelock) (timestamp %timestamp)))) : pair (map %open_pool string (pair (pair (mutez %amount) (map %cryptos string string)) (pair (list %dips (pair (mutez %amount) (string %swap))) (pair (timestamp %timelock) (timestamp %timestamp))))) (map %oracles address string) : pair (address %spare) (big_map %swap_pool string (pair (pair (address %address) (pair (mutez %amount) (string %crypto))) (pair (pair (bool %swapped) (list %swaps string)) (pair (timestamp %timelock) (timestamp %timestamp))))) : pair (pair (list %accepted_cryptos string) (address %admin)) (pair (big_map %closed_pool (missing_type_conversion "Unknown Type") (missing_type_conversion "Unknown Type")) (int %min_lock)) : address : @parameter%add_oracles
                SWAP;       # pair (map %open_pool string (pair (pair (mutez %amount) (map %cryptos string string)) (pair (list %dips (pair (mutez %amount) (string %swap))) (pair (timestamp %timelock) (timestamp %timestamp))))) (map %oracles address string) : map string (pair (pair (mutez %amount) (map %cryptos string string)) (pair (list %dips (pair (mutez %amount) (string %swap))) (pair (timestamp %timelock) (timestamp %timestamp)))) : pair (address %spare) (big_map %swap_pool string (pair (pair (address %address) (pair (mutez %amount) (string %crypto))) (pair (pair (bool %swapped) (list %swaps string)) (pair (timestamp %timelock) (timestamp %timestamp))))) : pair (pair (list %accepted_cryptos string) (address %admin)) (pair (big_map %closed_pool (missing_type_conversion "Unknown Type") (missing_type_conversion "Unknown Type")) (int %min_lock)) : address : @parameter%add_oracles
                CDR;        # map address string : map string (pair (pair (mutez %amount) (map %cryptos string string)) (pair (list %dips (pair (mutez %amount) (string %swap))) (pair (timestamp %timelock) (timestamp %timestamp)))) : pair (address %spare) (big_map %swap_pool string (pair (pair (address %address) (pair (mutez %amount) (string %crypto))) (pair (pair (bool %swapped) (list %swaps string)) (pair (timestamp %timelock) (timestamp %timestamp))))) : pair (pair (list %accepted_cryptos string) (address %admin)) (pair (big_map %closed_pool (missing_type_conversion "Unknown Type") (missing_type_conversion "Unknown Type")) (int %min_lock)) : address : @parameter%add_oracles
                DIG 4;      # address : map address string : map string (pair (pair (mutez %amount) (map %cryptos string string)) (pair (list %dips (pair (mutez %amount) (string %swap))) (pair (timestamp %timelock) (timestamp %timestamp)))) : pair (address %spare) (big_map %swap_pool string (pair (pair (address %address) (pair (mutez %amount) (string %crypto))) (pair (pair (bool %swapped) (list %swaps string)) (pair (timestamp %timelock) (timestamp %timestamp))))) : pair (pair (list %accepted_cryptos string) (address %admin)) (pair (big_map %closed_pool (missing_type_conversion "Unknown Type") (missing_type_conversion "Unknown Type")) (int %min_lock)) : @parameter%add_oracles
                DIG 5;      # @parameter%add_oracles : address : map address string : map string (pair (pair (mutez %amount) (map %cryptos string string)) (pair (list %dips (pair (mutez %amount) (string %swap))) (pair (timestamp %timelock) (timestamp %timestamp)))) : pair (address %spare) (big_map %swap_pool string (pair (pair (address %address) (pair (mutez %amount) (string %crypto))) (pair (pair (bool %swapped) (list %swaps string)) (pair (timestamp %timelock) (timestamp %timestamp))))) : pair (pair (list %accepted_cryptos string) (address %admin)) (pair (big_map %closed_pool (missing_type_conversion "Unknown Type") (missing_type_conversion "Unknown Type")) (int %min_lock))
                DUP;        # @parameter%add_oracles : @parameter%add_oracles : address : map address string : map string (pair (pair (mutez %amount) (map %cryptos string string)) (pair (list %dips (pair (mutez %amount) (string %swap))) (pair (timestamp %timelock) (timestamp %timestamp)))) : pair (address %spare) (big_map %swap_pool string (pair (pair (address %address) (pair (mutez %amount) (string %crypto))) (pair (pair (bool %swapped) (list %swaps string)) (pair (timestamp %timelock) (timestamp %timestamp))))) : pair (pair (list %accepted_cryptos string) (address %admin)) (pair (big_map %closed_pool (missing_type_conversion "Unknown Type") (missing_type_conversion "Unknown Type")) (int %min_lock))
                DUG 6;      # @parameter%add_oracles : address : map address string : map string (pair (pair (mutez %amount) (map %cryptos string string)) (pair (list %dips (pair (mutez %amount) (string %swap))) (pair (timestamp %timelock) (timestamp %timestamp)))) : pair (address %spare) (big_map %swap_pool string (pair (pair (address %address) (pair (mutez %amount) (string %crypto))) (pair (pair (bool %swapped) (list %swaps string)) (pair (timestamp %timelock) (timestamp %timestamp))))) : pair (pair (list %accepted_cryptos string) (address %admin)) (pair (big_map %closed_pool (missing_type_conversion "Unknown Type") (missing_type_conversion "Unknown Type")) (int %min_lock)) : @parameter%add_oracles
                SWAP;       # address : @parameter%add_oracles : map address string : map string (pair (pair (mutez %amount) (map %cryptos string string)) (pair (list %dips (pair (mutez %amount) (string %swap))) (pair (timestamp %timelock) (timestamp %timestamp)))) : pair (address %spare) (big_map %swap_pool string (pair (pair (address %address) (pair (mutez %amount) (string %crypto))) (pair (pair (bool %swapped) (list %swaps string)) (pair (timestamp %timelock) (timestamp %timestamp))))) : pair (pair (list %accepted_cryptos string) (address %admin)) (pair (big_map %closed_pool (missing_type_conversion "Unknown Type") (missing_type_conversion "Unknown Type")) (int %min_lock)) : @parameter%add_oracles
                DUP;        # address : address : @parameter%add_oracles : map address string : map string (pair (pair (mutez %amount) (map %cryptos string string)) (pair (list %dips (pair (mutez %amount) (string %swap))) (pair (timestamp %timelock) (timestamp %timestamp)))) : pair (address %spare) (big_map %swap_pool string (pair (pair (address %address) (pair (mutez %amount) (string %crypto))) (pair (pair (bool %swapped) (list %swaps string)) (pair (timestamp %timelock) (timestamp %timestamp))))) : pair (pair (list %accepted_cryptos string) (address %admin)) (pair (big_map %closed_pool (missing_type_conversion "Unknown Type") (missing_type_conversion "Unknown Type")) (int %min_lock)) : @parameter%add_oracles
                DUG 2;      # address : @parameter%add_oracles : address : map address string : map string (pair (pair (mutez %amount) (map %cryptos string string)) (pair (list %dips (pair (mutez %amount) (string %swap))) (pair (timestamp %timelock) (timestamp %timestamp)))) : pair (address %spare) (big_map %swap_pool string (pair (pair (address %address) (pair (mutez %amount) (string %crypto))) (pair (pair (bool %swapped) (list %swaps string)) (pair (timestamp %timelock) (timestamp %timestamp))))) : pair (pair (list %accepted_cryptos string) (address %admin)) (pair (big_map %closed_pool (missing_type_conversion "Unknown Type") (missing_type_conversion "Unknown Type")) (int %min_lock)) : @parameter%add_oracles
                GET;        # option string : address : map address string : map string (pair (pair (mutez %amount) (map %cryptos string string)) (pair (list %dips (pair (mutez %amount) (string %swap))) (pair (timestamp %timelock) (timestamp %timestamp)))) : pair (address %spare) (big_map %swap_pool string (pair (pair (address %address) (pair (mutez %amount) (string %crypto))) (pair (pair (bool %swapped) (list %swaps string)) (pair (timestamp %timelock) (timestamp %timestamp))))) : pair (pair (list %accepted_cryptos string) (address %admin)) (pair (big_map %closed_pool (missing_type_conversion "Unknown Type") (missing_type_conversion "Unknown Type")) (int %min_lock)) : @parameter%add_oracles
                IF_SOME
                  {
                    # of_some: Get-item:56 # @some : address : map address string : map string (pair (pair (mutez %amount) (map %cryptos string string)) (pair (list %dips (pair (mutez %amount) (string %swap))) (pair (timestamp %timelock) (timestamp %timestamp)))) : pair (address %spare) (big_map %swap_pool string (pair (pair (address %address) (pair (mutez %amount) (string %crypto))) (pair (pair (bool %swapped) (list %swaps string)) (pair (timestamp %timelock) (timestamp %timestamp))))) : pair (pair (list %accepted_cryptos string) (address %admin)) (pair (big_map %closed_pool (missing_type_conversion "Unknown Type") (missing_type_conversion "Unknown Type")) (int %min_lock)) : @parameter%add_oracles
                  }
                  {
                    PUSH int 56; # int : address : map address string : map string (pair (pair (mutez %amount) (map %cryptos string string)) (pair (list %dips (pair (mutez %amount) (string %swap))) (pair (timestamp %timelock) (timestamp %timestamp)))) : pair (address %spare) (big_map %swap_pool string (pair (pair (address %address) (pair (mutez %amount) (string %crypto))) (pair (pair (bool %swapped) (list %swaps string)) (pair (timestamp %timelock) (timestamp %timestamp))))) : pair (pair (list %accepted_cryptos string) (address %admin)) (pair (big_map %closed_pool (missing_type_conversion "Unknown Type") (missing_type_conversion "Unknown Type")) (int %min_lock)) : @parameter%add_oracles
                    FAILWITH;   # FAILED
                  }; # @some : address : map address string : map string (pair (pair (mutez %amount) (map %cryptos string string)) (pair (list %dips (pair (mutez %amount) (string %swap))) (pair (timestamp %timelock) (timestamp %timestamp)))) : pair (address %spare) (big_map %swap_pool string (pair (pair (address %address) (pair (mutez %amount) (string %crypto))) (pair (pair (bool %swapped) (list %swaps string)) (pair (timestamp %timelock) (timestamp %timestamp))))) : pair (pair (list %accepted_cryptos string) (address %admin)) (pair (big_map %closed_pool (missing_type_conversion "Unknown Type") (missing_type_conversion "Unknown Type")) (int %min_lock)) : @parameter%add_oracles
                SOME;       # option string : address : map address string : map string (pair (pair (mutez %amount) (map %cryptos string string)) (pair (list %dips (pair (mutez %amount) (string %swap))) (pair (timestamp %timelock) (timestamp %timestamp)))) : pair (address %spare) (big_map %swap_pool string (pair (pair (address %address) (pair (mutez %amount) (string %crypto))) (pair (pair (bool %swapped) (list %swaps string)) (pair (timestamp %timelock) (timestamp %timestamp))))) : pair (pair (list %accepted_cryptos string) (address %admin)) (pair (big_map %closed_pool (missing_type_conversion "Unknown Type") (missing_type_conversion "Unknown Type")) (int %min_lock)) : @parameter%add_oracles
                SWAP;       # address : option string : map address string : map string (pair (pair (mutez %amount) (map %cryptos string string)) (pair (list %dips (pair (mutez %amount) (string %swap))) (pair (timestamp %timelock) (timestamp %timestamp)))) : pair (address %spare) (big_map %swap_pool string (pair (pair (address %address) (pair (mutez %amount) (string %crypto))) (pair (pair (bool %swapped) (list %swaps string)) (pair (timestamp %timelock) (timestamp %timestamp))))) : pair (pair (list %accepted_cryptos string) (address %admin)) (pair (big_map %closed_pool (missing_type_conversion "Unknown Type") (missing_type_conversion "Unknown Type")) (int %min_lock)) : @parameter%add_oracles
                UPDATE;     # map address string : map string (pair (pair (mutez %amount) (map %cryptos string string)) (pair (list %dips (pair (mutez %amount) (string %swap))) (pair (timestamp %timelock) (timestamp %timestamp)))) : pair (address %spare) (big_map %swap_pool string (pair (pair (address %address) (pair (mutez %amount) (string %crypto))) (pair (pair (bool %swapped) (list %swaps string)) (pair (timestamp %timelock) (timestamp %timestamp))))) : pair (pair (list %accepted_cryptos string) (address %admin)) (pair (big_map %closed_pool (missing_type_conversion "Unknown Type") (missing_type_conversion "Unknown Type")) (int %min_lock)) : @parameter%add_oracles
                SWAP;       # map string (pair (pair (mutez %amount) (map %cryptos string string)) (pair (list %dips (pair (mutez %amount) (string %swap))) (pair (timestamp %timelock) (timestamp %timestamp)))) : map address string : pair (address %spare) (big_map %swap_pool string (pair (pair (address %address) (pair (mutez %amount) (string %crypto))) (pair (pair (bool %swapped) (list %swaps string)) (pair (timestamp %timelock) (timestamp %timestamp))))) : pair (pair (list %accepted_cryptos string) (address %admin)) (pair (big_map %closed_pool (missing_type_conversion "Unknown Type") (missing_type_conversion "Unknown Type")) (int %min_lock)) : @parameter%add_oracles
                PAIR;       # pair (map string (pair (pair (mutez %amount) (map %cryptos string string)) (pair (list %dips (pair (mutez %amount) (string %swap))) (pair (timestamp %timelock) (timestamp %timestamp))))) (map address string) : pair (address %spare) (big_map %swap_pool string (pair (pair (address %address) (pair (mutez %amount) (string %crypto))) (pair (pair (bool %swapped) (list %swaps string)) (pair (timestamp %timelock) (timestamp %timestamp))))) : pair (pair (list %accepted_cryptos string) (address %admin)) (pair (big_map %closed_pool (missing_type_conversion "Unknown Type") (missing_type_conversion "Unknown Type")) (int %min_lock)) : @parameter%add_oracles
                PAIR;       # pair (pair (map string (pair (pair (mutez %amount) (map %cryptos string string)) (pair (list %dips (pair (mutez %amount) (string %swap))) (pair (timestamp %timelock) (timestamp %timestamp))))) (map address string)) (pair (address %spare) (big_map %swap_pool string (pair (pair (address %address) (pair (mutez %amount) (string %crypto))) (pair (pair (bool %swapped) (list %swaps string)) (pair (timestamp %timelock) (timestamp %timestamp)))))) : pair (pair (list %accepted_cryptos string) (address %admin)) (pair (big_map %closed_pool (missing_type_conversion "Unknown Type") (missing_type_conversion "Unknown Type")) (int %min_lock)) : @parameter%add_oracles
                SWAP;       # pair (pair (list %accepted_cryptos string) (address %admin)) (pair (big_map %closed_pool (missing_type_conversion "Unknown Type") (missing_type_conversion "Unknown Type")) (int %min_lock)) : pair (pair (map string (pair (pair (mutez %amount) (map %cryptos string string)) (pair (list %dips (pair (mutez %amount) (string %swap))) (pair (timestamp %timelock) (timestamp %timestamp))))) (map address string)) (pair (address %spare) (big_map %swap_pool string (pair (pair (address %address) (pair (mutez %amount) (string %crypto))) (pair (pair (bool %swapped) (list %swaps string)) (pair (timestamp %timelock) (timestamp %timestamp)))))) : @parameter%add_oracles
                PAIR;       # pair (pair (pair (list %accepted_cryptos string) (address %admin)) (pair (big_map %closed_pool (missing_type_conversion "Unknown Type") (missing_type_conversion "Unknown Type")) (int %min_lock))) (pair (pair (map string (pair (pair (mutez %amount) (map %cryptos string string)) (pair (list %dips (pair (mutez %amount) (string %swap))) (pair (timestamp %timelock) (timestamp %timestamp))))) (map address string)) (pair (address %spare) (big_map %swap_pool string (pair (pair (address %address) (pair (mutez %amount) (string %crypto))) (pair (pair (bool %swapped) (list %swaps string)) (pair (timestamp %timelock) (timestamp %timestamp))))))) : @parameter%add_oracles
                SWAP;       # @parameter%add_oracles : pair (pair (pair (list %accepted_cryptos string) (address %admin)) (pair (big_map %closed_pool (missing_type_conversion "Unknown Type") (missing_type_conversion "Unknown Type")) (int %min_lock))) (pair (pair (map string (pair (pair (mutez %amount) (map %cryptos string string)) (pair (list %dips (pair (mutez %amount) (string %swap))) (pair (timestamp %timelock) (timestamp %timestamp))))) (map address string)) (pair (address %spare) (big_map %swap_pool string (pair (pair (address %address) (pair (mutez %amount) (string %crypto))) (pair (pair (bool %swapped) (list %swaps string)) (pair (timestamp %timelock) (timestamp %timestamp)))))))
              }; # @parameter%add_oracles : @storage
            DROP;       # @storage
          }
          {
            IF_LEFT
              {
                # == change_admin ==
                # sp.verify(sp.pack(sp.set_type_expr(self.data.spare, sp.TAddress)) == sp.pack(sp.set_type_expr(sp.sender, sp.TAddress)), message = 'Invalid Spare!') # @parameter%change_admin : @storage
                SENDER;     # address : @parameter%change_admin : @storage
                PACK;       # bytes : @parameter%change_admin : @storage
                DIG 2;      # @storage : bytes : @parameter%change_admin
                DUP;        # @storage : @storage : bytes : @parameter%change_admin
                DUG 3;      # @storage : bytes : @parameter%change_admin : @storage
                CDDAR;      # address : bytes : @parameter%change_admin : @storage
                PACK;       # bytes : bytes : @parameter%change_admin : @storage
                COMPARE;    # int : @parameter%change_admin : @storage
                EQ;         # bool : @parameter%change_admin : @storage
                IF
                  {}
                  {
                    PUSH string "Invalid Spare!"; # string : @parameter%change_admin : @storage
                    FAILWITH;   # FAILED
                  }; # @parameter%change_admin : @storage
                SWAP;       # @storage : @parameter%change_admin
                # self.data.admin = params.admin # @storage : @parameter%change_admin
                DUP;        # @storage : @storage : @parameter%change_admin
                CDR;        # pair (pair (map %open_pool string (pair (pair (mutez %amount) (map %cryptos string string)) (pair (list %dips (pair (mutez %amount) (string %swap))) (pair (timestamp %timelock) (timestamp %timestamp))))) (map %oracles address string)) (pair (address %spare) (big_map %swap_pool string (pair (pair (address %address) (pair (mutez %amount) (string %crypto))) (pair (pair (bool %swapped) (list %swaps string)) (pair (timestamp %timelock) (timestamp %timestamp)))))) : @storage : @parameter%change_admin
                SWAP;       # @storage : pair (pair (map %open_pool string (pair (pair (mutez %amount) (map %cryptos string string)) (pair (list %dips (pair (mutez %amount) (string %swap))) (pair (timestamp %timelock) (timestamp %timestamp))))) (map %oracles address string)) (pair (address %spare) (big_map %swap_pool string (pair (pair (address %address) (pair (mutez %amount) (string %crypto))) (pair (pair (bool %swapped) (list %swaps string)) (pair (timestamp %timelock) (timestamp %timestamp)))))) : @parameter%change_admin
                CAR;        # pair (pair (list %accepted_cryptos string) (address %admin)) (pair (big_map %closed_pool (missing_type_conversion "Unknown Type") (missing_type_conversion "Unknown Type")) (int %min_lock)) : pair (pair (map %open_pool string (pair (pair (mutez %amount) (map %cryptos string string)) (pair (list %dips (pair (mutez %amount) (string %swap))) (pair (timestamp %timelock) (timestamp %timestamp))))) (map %oracles address string)) (pair (address %spare) (big_map %swap_pool string (pair (pair (address %address) (pair (mutez %amount) (string %crypto))) (pair (pair (bool %swapped) (list %swaps string)) (pair (timestamp %timelock) (timestamp %timestamp)))))) : @parameter%change_admin
                DUP;        # pair (pair (list %accepted_cryptos string) (address %admin)) (pair (big_map %closed_pool (missing_type_conversion "Unknown Type") (missing_type_conversion "Unknown Type")) (int %min_lock)) : pair (pair (list %accepted_cryptos string) (address %admin)) (pair (big_map %closed_pool (missing_type_conversion "Unknown Type") (missing_type_conversion "Unknown Type")) (int %min_lock)) : pair (pair (map %open_pool string (pair (pair (mutez %amount) (map %cryptos string string)) (pair (list %dips (pair (mutez %amount) (string %swap))) (pair (timestamp %timelock) (timestamp %timestamp))))) (map %oracles address string)) (pair (address %spare) (big_map %swap_pool string (pair (pair (address %address) (pair (mutez %amount) (string %crypto))) (pair (pair (bool %swapped) (list %swaps string)) (pair (timestamp %timelock) (timestamp %timestamp)))))) : @parameter%change_admin
                CDR;        # pair (big_map %closed_pool (missing_type_conversion "Unknown Type") (missing_type_conversion "Unknown Type")) (int %min_lock) : pair (pair (list %accepted_cryptos string) (address %admin)) (pair (big_map %closed_pool (missing_type_conversion "Unknown Type") (missing_type_conversion "Unknown Type")) (int %min_lock)) : pair (pair (map %open_pool string (pair (pair (mutez %amount) (map %cryptos string string)) (pair (list %dips (pair (mutez %amount) (string %swap))) (pair (timestamp %timelock) (timestamp %timestamp))))) (map %oracles address string)) (pair (address %spare) (big_map %swap_pool string (pair (pair (address %address) (pair (mutez %amount) (string %crypto))) (pair (pair (bool %swapped) (list %swaps string)) (pair (timestamp %timelock) (timestamp %timestamp)))))) : @parameter%change_admin
                SWAP;       # pair (pair (list %accepted_cryptos string) (address %admin)) (pair (big_map %closed_pool (missing_type_conversion "Unknown Type") (missing_type_conversion "Unknown Type")) (int %min_lock)) : pair (big_map %closed_pool (missing_type_conversion "Unknown Type") (missing_type_conversion "Unknown Type")) (int %min_lock) : pair (pair (map %open_pool string (pair (pair (mutez %amount) (map %cryptos string string)) (pair (list %dips (pair (mutez %amount) (string %swap))) (pair (timestamp %timelock) (timestamp %timestamp))))) (map %oracles address string)) (pair (address %spare) (big_map %swap_pool string (pair (pair (address %address) (pair (mutez %amount) (string %crypto))) (pair (pair (bool %swapped) (list %swaps string)) (pair (timestamp %timelock) (timestamp %timestamp)))))) : @parameter%change_admin
                CAAR;       # list string : pair (big_map %closed_pool (missing_type_conversion "Unknown Type") (missing_type_conversion "Unknown Type")) (int %min_lock) : pair (pair (map %open_pool string (pair (pair (mutez %amount) (map %cryptos string string)) (pair (list %dips (pair (mutez %amount) (string %swap))) (pair (timestamp %timelock) (timestamp %timestamp))))) (map %oracles address string)) (pair (address %spare) (big_map %swap_pool string (pair (pair (address %address) (pair (mutez %amount) (string %crypto))) (pair (pair (bool %swapped) (list %swaps string)) (pair (timestamp %timelock) (timestamp %timestamp)))))) : @parameter%change_admin
                DIG 3;      # @parameter%change_admin : list string : pair (big_map %closed_pool (missing_type_conversion "Unknown Type") (missing_type_conversion "Unknown Type")) (int %min_lock) : pair (pair (map %open_pool string (pair (pair (mutez %amount) (map %cryptos string string)) (pair (list %dips (pair (mutez %amount) (string %swap))) (pair (timestamp %timelock) (timestamp %timestamp))))) (map %oracles address string)) (pair (address %spare) (big_map %swap_pool string (pair (pair (address %address) (pair (mutez %amount) (string %crypto))) (pair (pair (bool %swapped) (list %swaps string)) (pair (timestamp %timelock) (timestamp %timestamp))))))
                SWAP;       # list string : @parameter%change_admin : pair (big_map %closed_pool (missing_type_conversion "Unknown Type") (missing_type_conversion "Unknown Type")) (int %min_lock) : pair (pair (map %open_pool string (pair (pair (mutez %amount) (map %cryptos string string)) (pair (list %dips (pair (mutez %amount) (string %swap))) (pair (timestamp %timelock) (timestamp %timestamp))))) (map %oracles address string)) (pair (address %spare) (big_map %swap_pool string (pair (pair (address %address) (pair (mutez %amount) (string %crypto))) (pair (pair (bool %swapped) (list %swaps string)) (pair (timestamp %timelock) (timestamp %timestamp))))))
                PAIR;       # pair (list string) @parameter%change_admin : pair (big_map %closed_pool (missing_type_conversion "Unknown Type") (missing_type_conversion "Unknown Type")) (int %min_lock) : pair (pair (map %open_pool string (pair (pair (mutez %amount) (map %cryptos string string)) (pair (list %dips (pair (mutez %amount) (string %swap))) (pair (timestamp %timelock) (timestamp %timestamp))))) (map %oracles address string)) (pair (address %spare) (big_map %swap_pool string (pair (pair (address %address) (pair (mutez %amount) (string %crypto))) (pair (pair (bool %swapped) (list %swaps string)) (pair (timestamp %timelock) (timestamp %timestamp))))))
                PAIR;       # pair (pair (list string) @parameter%change_admin) (pair (big_map %closed_pool (missing_type_conversion "Unknown Type") (missing_type_conversion "Unknown Type")) (int %min_lock)) : pair (pair (map %open_pool string (pair (pair (mutez %amount) (map %cryptos string string)) (pair (list %dips (pair (mutez %amount) (string %swap))) (pair (timestamp %timelock) (timestamp %timestamp))))) (map %oracles address string)) (pair (address %spare) (big_map %swap_pool string (pair (pair (address %address) (pair (mutez %amount) (string %crypto))) (pair (pair (bool %swapped) (list %swaps string)) (pair (timestamp %timelock) (timestamp %timestamp))))))
                PAIR;       # pair (pair (pair (list string) @parameter%change_admin) (pair (big_map %closed_pool (missing_type_conversion "Unknown Type") (missing_type_conversion "Unknown Type")) (int %min_lock))) (pair (pair (map %open_pool string (pair (pair (mutez %amount) (map %cryptos string string)) (pair (list %dips (pair (mutez %amount) (string %swap))) (pair (timestamp %timelock) (timestamp %timestamp))))) (map %oracles address string)) (pair (address %spare) (big_map %swap_pool string (pair (pair (address %address) (pair (mutez %amount) (string %crypto))) (pair (pair (bool %swapped) (list %swaps string)) (pair (timestamp %timelock) (timestamp %timestamp)))))))
              }
              {
                DROP;       # @storage
                # == clean_pool ==
                # sp.verify(self.data.oracles.contains(sp.sender), message = 'Invalid Oracle!') # @storage
                DUP;        # @storage : @storage
                CDADR;      # map address string : @storage
                SENDER;     # address : map address string : @storage
                MEM;        # bool : @storage
                IF
                  {}
                  {
                    PUSH string "Invalid Oracle!"; # string : @storage
                    FAILWITH;   # FAILED
                  }; # @storage
              }; # pair (pair (pair (list string) @parameter%change_admin) (pair (big_map %closed_pool (missing_type_conversion "Unknown Type") (missing_type_conversion "Unknown Type")) (int %min_lock))) (pair (pair (map %open_pool string (pair (pair (mutez %amount) (map %cryptos string string)) (pair (list %dips (pair (mutez %amount) (string %swap))) (pair (timestamp %timelock) (timestamp %timestamp))))) (map %oracles address string)) (pair (address %spare) (big_map %swap_pool string (pair (pair (address %address) (pair (mutez %amount) (string %crypto))) (pair (pair (bool %swapped) (list %swaps string)) (pair (timestamp %timelock) (timestamp %timestamp)))))))
          }; # @storage
      }
      {
        IF_LEFT
          {
            IF_LEFT
              {
                # == remove_oracles ==
                # sp.verify(sp.pack(sp.set_type_expr(self.data.admin, sp.TAddress)) == sp.pack(sp.set_type_expr(sp.sender, sp.TAddress)), message = 'Invalid Admin!') # @parameter%remove_oracles : @storage
                SENDER;     # address : @parameter%remove_oracles : @storage
                PACK;       # bytes : @parameter%remove_oracles : @storage
                DIG 2;      # @storage : bytes : @parameter%remove_oracles
                DUP;        # @storage : @storage : bytes : @parameter%remove_oracles
                DUG 3;      # @storage : bytes : @parameter%remove_oracles : @storage
                CAADR;      # address : bytes : @parameter%remove_oracles : @storage
                PACK;       # bytes : bytes : @parameter%remove_oracles : @storage
                COMPARE;    # int : @parameter%remove_oracles : @storage
                EQ;         # bool : @parameter%remove_oracles : @storage
                IF
                  {}
                  {
                    PUSH string "Invalid Admin!"; # string : @parameter%remove_oracles : @storage
                    FAILWITH;   # FAILED
                  }; # @parameter%remove_oracles : @storage
                # for oracle in params.oracles: ... # @parameter%remove_oracles : @storage
                DUP;        # @parameter%remove_oracles : @parameter%remove_oracles : @storage
                ITER
                  {
                    # if self.data.oracles.contains(oracle): # address : @parameter%remove_oracles : @storage
                    DIG 2;      # @storage : address : @parameter%remove_oracles
                    DUP;        # @storage : @storage : address : @parameter%remove_oracles
                    DUG 3;      # @storage : address : @parameter%remove_oracles : @storage
                    CDADR;      # map address string : address : @parameter%remove_oracles : @storage
                    SWAP;       # address : map address string : @parameter%remove_oracles : @storage
                    DUP;        # address : address : map address string : @parameter%remove_oracles : @storage
                    DUG 2;      # address : map address string : address : @parameter%remove_oracles : @storage
                    MEM;        # bool : address : @parameter%remove_oracles : @storage
                    IF
                      {
                        # del self.data.oracles[oracle] # address : @parameter%remove_oracles : @storage
                        DIG 2;      # @storage : address : @parameter%remove_oracles
                        DUP;        # @storage : @storage : address : @parameter%remove_oracles
                        CAR;        # pair (pair (list %accepted_cryptos string) (address %admin)) (pair (big_map %closed_pool (missing_type_conversion "Unknown Type") (missing_type_conversion "Unknown Type")) (int %min_lock)) : @storage : address : @parameter%remove_oracles
                        SWAP;       # @storage : pair (pair (list %accepted_cryptos string) (address %admin)) (pair (big_map %closed_pool (missing_type_conversion "Unknown Type") (missing_type_conversion "Unknown Type")) (int %min_lock)) : address : @parameter%remove_oracles
                        CDR;        # pair (pair (map %open_pool string (pair (pair (mutez %amount) (map %cryptos string string)) (pair (list %dips (pair (mutez %amount) (string %swap))) (pair (timestamp %timelock) (timestamp %timestamp))))) (map %oracles address string)) (pair (address %spare) (big_map %swap_pool string (pair (pair (address %address) (pair (mutez %amount) (string %crypto))) (pair (pair (bool %swapped) (list %swaps string)) (pair (timestamp %timelock) (timestamp %timestamp)))))) : pair (pair (list %accepted_cryptos string) (address %admin)) (pair (big_map %closed_pool (missing_type_conversion "Unknown Type") (missing_type_conversion "Unknown Type")) (int %min_lock)) : address : @parameter%remove_oracles
                        DUP;        # pair (pair (map %open_pool string (pair (pair (mutez %amount) (map %cryptos string string)) (pair (list %dips (pair (mutez %amount) (string %swap))) (pair (timestamp %timelock) (timestamp %timestamp))))) (map %oracles address string)) (pair (address %spare) (big_map %swap_pool string (pair (pair (address %address) (pair (mutez %amount) (string %crypto))) (pair (pair (bool %swapped) (list %swaps string)) (pair (timestamp %timelock) (timestamp %timestamp)))))) : pair (pair (map %open_pool string (pair (pair (mutez %amount) (map %cryptos string string)) (pair (list %dips (pair (mutez %amount) (string %swap))) (pair (timestamp %timelock) (timestamp %timestamp))))) (map %oracles address string)) (pair (address %spare) (big_map %swap_pool string (pair (pair (address %address) (pair (mutez %amount) (string %crypto))) (pair (pair (bool %swapped) (list %swaps string)) (pair (timestamp %timelock) (timestamp %timestamp)))))) : pair (pair (list %accepted_cryptos string) (address %admin)) (pair (big_map %closed_pool (missing_type_conversion "Unknown Type") (missing_type_conversion "Unknown Type")) (int %min_lock)) : address : @parameter%remove_oracles
                        CDR;        # pair (address %spare) (big_map %swap_pool string (pair (pair (address %address) (pair (mutez %amount) (string %crypto))) (pair (pair (bool %swapped) (list %swaps string)) (pair (timestamp %timelock) (timestamp %timestamp))))) : pair (pair (map %open_pool string (pair (pair (mutez %amount) (map %cryptos string string)) (pair (list %dips (pair (mutez %amount) (string %swap))) (pair (timestamp %timelock) (timestamp %timestamp))))) (map %oracles address string)) (pair (address %spare) (big_map %swap_pool string (pair (pair (address %address) (pair (mutez %amount) (string %crypto))) (pair (pair (bool %swapped) (list %swaps string)) (pair (timestamp %timelock) (timestamp %timestamp)))))) : pair (pair (list %accepted_cryptos string) (address %admin)) (pair (big_map %closed_pool (missing_type_conversion "Unknown Type") (missing_type_conversion "Unknown Type")) (int %min_lock)) : address : @parameter%remove_oracles
                        SWAP;       # pair (pair (map %open_pool string (pair (pair (mutez %amount) (map %cryptos string string)) (pair (list %dips (pair (mutez %amount) (string %swap))) (pair (timestamp %timelock) (timestamp %timestamp))))) (map %oracles address string)) (pair (address %spare) (big_map %swap_pool string (pair (pair (address %address) (pair (mutez %amount) (string %crypto))) (pair (pair (bool %swapped) (list %swaps string)) (pair (timestamp %timelock) (timestamp %timestamp)))))) : pair (address %spare) (big_map %swap_pool string (pair (pair (address %address) (pair (mutez %amount) (string %crypto))) (pair (pair (bool %swapped) (list %swaps string)) (pair (timestamp %timelock) (timestamp %timestamp))))) : pair (pair (list %accepted_cryptos string) (address %admin)) (pair (big_map %closed_pool (missing_type_conversion "Unknown Type") (missing_type_conversion "Unknown Type")) (int %min_lock)) : address : @parameter%remove_oracles
                        CAR;        # pair (map %open_pool string (pair (pair (mutez %amount) (map %cryptos string string)) (pair (list %dips (pair (mutez %amount) (string %swap))) (pair (timestamp %timelock) (timestamp %timestamp))))) (map %oracles address string) : pair (address %spare) (big_map %swap_pool string (pair (pair (address %address) (pair (mutez %amount) (string %crypto))) (pair (pair (bool %swapped) (list %swaps string)) (pair (timestamp %timelock) (timestamp %timestamp))))) : pair (pair (list %accepted_cryptos string) (address %admin)) (pair (big_map %closed_pool (missing_type_conversion "Unknown Type") (missing_type_conversion "Unknown Type")) (int %min_lock)) : address : @parameter%remove_oracles
                        DUP;        # pair (map %open_pool string (pair (pair (mutez %amount) (map %cryptos string string)) (pair (list %dips (pair (mutez %amount) (string %swap))) (pair (timestamp %timelock) (timestamp %timestamp))))) (map %oracles address string) : pair (map %open_pool string (pair (pair (mutez %amount) (map %cryptos string string)) (pair (list %dips (pair (mutez %amount) (string %swap))) (pair (timestamp %timelock) (timestamp %timestamp))))) (map %oracles address string) : pair (address %spare) (big_map %swap_pool string (pair (pair (address %address) (pair (mutez %amount) (string %crypto))) (pair (pair (bool %swapped) (list %swaps string)) (pair (timestamp %timelock) (timestamp %timestamp))))) : pair (pair (list %accepted_cryptos string) (address %admin)) (pair (big_map %closed_pool (missing_type_conversion "Unknown Type") (missing_type_conversion "Unknown Type")) (int %min_lock)) : address : @parameter%remove_oracles
                        CAR;        # map string (pair (pair (mutez %amount) (map %cryptos string string)) (pair (list %dips (pair (mutez %amount) (string %swap))) (pair (timestamp %timelock) (timestamp %timestamp)))) : pair (map %open_pool string (pair (pair (mutez %amount) (map %cryptos string string)) (pair (list %dips (pair (mutez %amount) (string %swap))) (pair (timestamp %timelock) (timestamp %timestamp))))) (map %oracles address string) : pair (address %spare) (big_map %swap_pool string (pair (pair (address %address) (pair (mutez %amount) (string %crypto))) (pair (pair (bool %swapped) (list %swaps string)) (pair (timestamp %timelock) (timestamp %timestamp))))) : pair (pair (list %accepted_cryptos string) (address %admin)) (pair (big_map %closed_pool (missing_type_conversion "Unknown Type") (missing_type_conversion "Unknown Type")) (int %min_lock)) : address : @parameter%remove_oracles
                        SWAP;       # pair (map %open_pool string (pair (pair (mutez %amount) (map %cryptos string string)) (pair (list %dips (pair (mutez %amount) (string %swap))) (pair (timestamp %timelock) (timestamp %timestamp))))) (map %oracles address string) : map string (pair (pair (mutez %amount) (map %cryptos string string)) (pair (list %dips (pair (mutez %amount) (string %swap))) (pair (timestamp %timelock) (timestamp %timestamp)))) : pair (address %spare) (big_map %swap_pool string (pair (pair (address %address) (pair (mutez %amount) (string %crypto))) (pair (pair (bool %swapped) (list %swaps string)) (pair (timestamp %timelock) (timestamp %timestamp))))) : pair (pair (list %accepted_cryptos string) (address %admin)) (pair (big_map %closed_pool (missing_type_conversion "Unknown Type") (missing_type_conversion "Unknown Type")) (int %min_lock)) : address : @parameter%remove_oracles
                        CDR;        # map address string : map string (pair (pair (mutez %amount) (map %cryptos string string)) (pair (list %dips (pair (mutez %amount) (string %swap))) (pair (timestamp %timelock) (timestamp %timestamp)))) : pair (address %spare) (big_map %swap_pool string (pair (pair (address %address) (pair (mutez %amount) (string %crypto))) (pair (pair (bool %swapped) (list %swaps string)) (pair (timestamp %timelock) (timestamp %timestamp))))) : pair (pair (list %accepted_cryptos string) (address %admin)) (pair (big_map %closed_pool (missing_type_conversion "Unknown Type") (missing_type_conversion "Unknown Type")) (int %min_lock)) : address : @parameter%remove_oracles
                        NONE string; # option string : map address string : map string (pair (pair (mutez %amount) (map %cryptos string string)) (pair (list %dips (pair (mutez %amount) (string %swap))) (pair (timestamp %timelock) (timestamp %timestamp)))) : pair (address %spare) (big_map %swap_pool string (pair (pair (address %address) (pair (mutez %amount) (string %crypto))) (pair (pair (bool %swapped) (list %swaps string)) (pair (timestamp %timelock) (timestamp %timestamp))))) : pair (pair (list %accepted_cryptos string) (address %admin)) (pair (big_map %closed_pool (missing_type_conversion "Unknown Type") (missing_type_conversion "Unknown Type")) (int %min_lock)) : address : @parameter%remove_oracles
                        DIG 5;      # address : option string : map address string : map string (pair (pair (mutez %amount) (map %cryptos string string)) (pair (list %dips (pair (mutez %amount) (string %swap))) (pair (timestamp %timelock) (timestamp %timestamp)))) : pair (address %spare) (big_map %swap_pool string (pair (pair (address %address) (pair (mutez %amount) (string %crypto))) (pair (pair (bool %swapped) (list %swaps string)) (pair (timestamp %timelock) (timestamp %timestamp))))) : pair (pair (list %accepted_cryptos string) (address %admin)) (pair (big_map %closed_pool (missing_type_conversion "Unknown Type") (missing_type_conversion "Unknown Type")) (int %min_lock)) : @parameter%remove_oracles
                        UPDATE;     # map address string : map string (pair (pair (mutez %amount) (map %cryptos string string)) (pair (list %dips (pair (mutez %amount) (string %swap))) (pair (timestamp %timelock) (timestamp %timestamp)))) : pair (address %spare) (big_map %swap_pool string (pair (pair (address %address) (pair (mutez %amount) (string %crypto))) (pair (pair (bool %swapped) (list %swaps string)) (pair (timestamp %timelock) (timestamp %timestamp))))) : pair (pair (list %accepted_cryptos string) (address %admin)) (pair (big_map %closed_pool (missing_type_conversion "Unknown Type") (missing_type_conversion "Unknown Type")) (int %min_lock)) : @parameter%remove_oracles
                        SWAP;       # map string (pair (pair (mutez %amount) (map %cryptos string string)) (pair (list %dips (pair (mutez %amount) (string %swap))) (pair (timestamp %timelock) (timestamp %timestamp)))) : map address string : pair (address %spare) (big_map %swap_pool string (pair (pair (address %address) (pair (mutez %amount) (string %crypto))) (pair (pair (bool %swapped) (list %swaps string)) (pair (timestamp %timelock) (timestamp %timestamp))))) : pair (pair (list %accepted_cryptos string) (address %admin)) (pair (big_map %closed_pool (missing_type_conversion "Unknown Type") (missing_type_conversion "Unknown Type")) (int %min_lock)) : @parameter%remove_oracles
                        PAIR;       # pair (map string (pair (pair (mutez %amount) (map %cryptos string string)) (pair (list %dips (pair (mutez %amount) (string %swap))) (pair (timestamp %timelock) (timestamp %timestamp))))) (map address string) : pair (address %spare) (big_map %swap_pool string (pair (pair (address %address) (pair (mutez %amount) (string %crypto))) (pair (pair (bool %swapped) (list %swaps string)) (pair (timestamp %timelock) (timestamp %timestamp))))) : pair (pair (list %accepted_cryptos string) (address %admin)) (pair (big_map %closed_pool (missing_type_conversion "Unknown Type") (missing_type_conversion "Unknown Type")) (int %min_lock)) : @parameter%remove_oracles
                        PAIR;       # pair (pair (map string (pair (pair (mutez %amount) (map %cryptos string string)) (pair (list %dips (pair (mutez %amount) (string %swap))) (pair (timestamp %timelock) (timestamp %timestamp))))) (map address string)) (pair (address %spare) (big_map %swap_pool string (pair (pair (address %address) (pair (mutez %amount) (string %crypto))) (pair (pair (bool %swapped) (list %swaps string)) (pair (timestamp %timelock) (timestamp %timestamp)))))) : pair (pair (list %accepted_cryptos string) (address %admin)) (pair (big_map %closed_pool (missing_type_conversion "Unknown Type") (missing_type_conversion "Unknown Type")) (int %min_lock)) : @parameter%remove_oracles
                        SWAP;       # pair (pair (list %accepted_cryptos string) (address %admin)) (pair (big_map %closed_pool (missing_type_conversion "Unknown Type") (missing_type_conversion "Unknown Type")) (int %min_lock)) : pair (pair (map string (pair (pair (mutez %amount) (map %cryptos string string)) (pair (list %dips (pair (mutez %amount) (string %swap))) (pair (timestamp %timelock) (timestamp %timestamp))))) (map address string)) (pair (address %spare) (big_map %swap_pool string (pair (pair (address %address) (pair (mutez %amount) (string %crypto))) (pair (pair (bool %swapped) (list %swaps string)) (pair (timestamp %timelock) (timestamp %timestamp)))))) : @parameter%remove_oracles
                        PAIR;       # pair (pair (pair (list %accepted_cryptos string) (address %admin)) (pair (big_map %closed_pool (missing_type_conversion "Unknown Type") (missing_type_conversion "Unknown Type")) (int %min_lock))) (pair (pair (map string (pair (pair (mutez %amount) (map %cryptos string string)) (pair (list %dips (pair (mutez %amount) (string %swap))) (pair (timestamp %timelock) (timestamp %timestamp))))) (map address string)) (pair (address %spare) (big_map %swap_pool string (pair (pair (address %address) (pair (mutez %amount) (string %crypto))) (pair (pair (bool %swapped) (list %swaps string)) (pair (timestamp %timelock) (timestamp %timestamp))))))) : @parameter%remove_oracles
                        SWAP;       # @parameter%remove_oracles : pair (pair (pair (list %accepted_cryptos string) (address %admin)) (pair (big_map %closed_pool (missing_type_conversion "Unknown Type") (missing_type_conversion "Unknown Type")) (int %min_lock))) (pair (pair (map string (pair (pair (mutez %amount) (map %cryptos string string)) (pair (list %dips (pair (mutez %amount) (string %swap))) (pair (timestamp %timelock) (timestamp %timestamp))))) (map address string)) (pair (address %spare) (big_map %swap_pool string (pair (pair (address %address) (pair (mutez %amount) (string %crypto))) (pair (pair (bool %swapped) (list %swaps string)) (pair (timestamp %timelock) (timestamp %timestamp)))))))
                      }
                      {
                        DROP;       # @parameter%remove_oracles : @storage
                      }; # @parameter%remove_oracles : pair (pair (pair (list %accepted_cryptos string) (address %admin)) (pair (big_map %closed_pool (missing_type_conversion "Unknown Type") (missing_type_conversion "Unknown Type")) (int %min_lock))) (pair (pair (map string (pair (pair (mutez %amount) (map %cryptos string string)) (pair (list %dips (pair (mutez %amount) (string %swap))) (pair (timestamp %timelock) (timestamp %timestamp))))) (map address string)) (pair (address %spare) (big_map %swap_pool string (pair (pair (address %address) (pair (mutez %amount) (string %crypto))) (pair (pair (bool %swapped) (list %swaps string)) (pair (timestamp %timelock) (timestamp %timestamp)))))))
                  }; # @parameter%remove_oracles : @storage
                DROP;       # @storage
              }
              {
                DROP;       # @storage
                # == request_tezos_exchange == # @storage
              }; # @storage
          }
          {
            IF_LEFT
              {
                DROP;       # @storage
                # == request_tezos_swap == # @storage
              }
              {
                DROP;       # @storage
                # == update_pool ==
                # sp.verify(self.data.oracles.contains(sp.sender), message = 'Invalid Oracle!') # @storage
                DUP;        # @storage : @storage
                CDADR;      # map address string : @storage
                SENDER;     # address : map address string : @storage
                MEM;        # bool : @storage
                IF
                  {}
                  {
                    PUSH string "Invalid Oracle!"; # string : @storage
                    FAILWITH;   # FAILED
                  }; # @storage
              }; # @storage
          }; # @storage
      }; # @storage
    NIL operation; # list operation : @storage
    PAIR;       # pair (list operation) @storage
  };
